function param = compute_controller_base_parameters
    % load truck parameters
    load('system/parameters_truck');
    
    % (2) discretization
    Ts = 60;
    
    Ac = zeros(3); 
    Ac(1,1) = -1/truck.m1*(truck.a12+truck.a1o); 
    Ac(1,2) = truck.a12/truck.m1; 
    Ac(1,3) = 0.0; 
    Ac(2,1) = truck.a12/truck.m2; 
    Ac(2,2) = -1/truck.m2*(truck.a12+truck.a23+truck.a2o); 
    Ac(2,3) = truck.a23/truck.m2;
    Ac(3,1) = 0; 
    Ac(3,2) = truck.a23/truck.m3; 
    Ac(3,3) = -1/truck.m3*(truck.a23+truck.a3o); 
    A = exp(Ac*Ts); 
    
    Bc = zeros(3,2); 
    Bc(1,1) = 1/truck.m1; 
    Bc(2,2) = 1/truck.m2; 
    B = inv(Ac)*(A-eye(3))*Bc;
    
    Bcd = zeros(3,2); 
    Bcd(1,1) = 1/truck.m1; 
    Bcd(2,2) = 1/truck.m2; 
    Bcd(3,3) = 1/truck.m3; 
    Bd = inv(Ac)*(A-eye(3))*Bcd;
    
    % (3) set point computation
    Asp = zeros(3); 
    Asp(1,1) = -(truck.a12+truck.a1o); 
    Asp(1,2) = truck.a12; 
    Asp(1,3) = 0.0; 
    Asp(2,1) = truck.a12; 
    Asp(2,2) = -(truck.a12+truck.a23+truck.a2o); 
    Asp(2,3) = truck.a23;
    Asp(3,1) = 0; 
    Asp(3,2) = truck.a23; 
    Asp(3,3) = -(truck.a23+truck.a3o); 
    Bsp = zeros(3,2); 
    B(1:2,1:2) = eye(2); 
    dsp = [truck.a1o;truck.a1otruck.a1o*truck.To
    T_sp = ...
    p_sp = ...
    
    % (4) system constraints
    Pcons = truck.InputConstraints;
    Tcons = truck.StateConstraints;
    
    % (4) constraints for delta formulation
    Ucons = ...
    Xcons = ...
    
    % (5) LQR cost function
    Q = ...
    R = ...
    
    % put everything together
    param.A = Ac;
    param.B = B;
    param.Q = Q;
    param.R = R;
    param.T_sp = T_sp;
    param.p_sp = p_sp;
    param.Ucons = Ucons;
    param.Xcons = Xcons;
    param.Tcons = Tcons;
    param.Pcons = Pcons;
end

